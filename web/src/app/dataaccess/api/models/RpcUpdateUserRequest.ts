/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcUserRole } from './RpcUserRole';
import {
    RpcUserRoleFromJSON,
    RpcUserRoleFromJSONTyped,
    RpcUserRoleToJSON,
    RpcUserRoleToJSONTyped,
} from './RpcUserRole';

/**
 * 
 * @export
 * @interface RpcUpdateUserRequest
 */
export interface RpcUpdateUserRequest {
    /**
     * 
     * @type {number}
     * @memberof RpcUpdateUserRequest
     */
    iD: number;
    /**
     * 
     * @type {string}
     * @memberof RpcUpdateUserRequest
     */
    displayName: string;
    /**
     * 
     * @type {RpcUserRole}
     * @memberof RpcUpdateUserRequest
     */
    role: RpcUserRole;
}



/**
 * Check if a given object implements the RpcUpdateUserRequest interface.
 */
export function instanceOfRpcUpdateUserRequest(value: object): value is RpcUpdateUserRequest {
    if (!('iD' in value) || value['iD'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function RpcUpdateUserRequestFromJSON(json: any): RpcUpdateUserRequest {
    return RpcUpdateUserRequestFromJSONTyped(json, false);
}

export function RpcUpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcUpdateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'iD': json['ID'],
        'displayName': json['DisplayName'],
        'role': RpcUserRoleFromJSON(json['Role']),
    };
}

export function RpcUpdateUserRequestToJSON(json: any): RpcUpdateUserRequest {
    return RpcUpdateUserRequestToJSONTyped(json, false);
}

export function RpcUpdateUserRequestToJSONTyped(value?: RpcUpdateUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ID': value['iD'],
        'DisplayName': value['displayName'],
        'Role': RpcUserRoleToJSON(value['role']),
    };
}

