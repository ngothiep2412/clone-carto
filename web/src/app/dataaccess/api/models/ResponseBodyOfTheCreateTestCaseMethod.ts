/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcError } from './RpcError';
import {
    RpcErrorFromJSON,
    RpcErrorFromJSONTyped,
    RpcErrorToJSON,
    RpcErrorToJSONTyped,
} from './RpcError';
import type { RpcCreateTestCaseResponse } from './RpcCreateTestCaseResponse';
import {
    RpcCreateTestCaseResponseFromJSON,
    RpcCreateTestCaseResponseFromJSONTyped,
    RpcCreateTestCaseResponseToJSON,
    RpcCreateTestCaseResponseToJSONTyped,
} from './RpcCreateTestCaseResponse';

/**
 * 
 * @export
 * @interface ResponseBodyOfTheCreateTestCaseMethod
 */
export interface ResponseBodyOfTheCreateTestCaseMethod {
    /**
     * A String specifying the version of the JSON-RPC protocol. MUST be exactly "2.0".
     * @type {string}
     * @memberof ResponseBodyOfTheCreateTestCaseMethod
     */
    jsonrpc?: ResponseBodyOfTheCreateTestCaseMethodJsonrpcEnum;
    /**
     * It MUST be the same as the value of the id member in the Request.
     * @type {string}
     * @memberof ResponseBodyOfTheCreateTestCaseMethod
     */
    id?: string;
    /**
     * 
     * @type {RpcError}
     * @memberof ResponseBodyOfTheCreateTestCaseMethod
     */
    error?: RpcError;
    /**
     * 
     * @type {RpcCreateTestCaseResponse}
     * @memberof ResponseBodyOfTheCreateTestCaseMethod
     */
    result?: RpcCreateTestCaseResponse;
}


/**
 * @export
 */
export const ResponseBodyOfTheCreateTestCaseMethodJsonrpcEnum = {
    _20: '2.0'
} as const;
export type ResponseBodyOfTheCreateTestCaseMethodJsonrpcEnum = typeof ResponseBodyOfTheCreateTestCaseMethodJsonrpcEnum[keyof typeof ResponseBodyOfTheCreateTestCaseMethodJsonrpcEnum];


/**
 * Check if a given object implements the ResponseBodyOfTheCreateTestCaseMethod interface.
 */
export function instanceOfResponseBodyOfTheCreateTestCaseMethod(value: object): value is ResponseBodyOfTheCreateTestCaseMethod {
    return true;
}

export function ResponseBodyOfTheCreateTestCaseMethodFromJSON(json: any): ResponseBodyOfTheCreateTestCaseMethod {
    return ResponseBodyOfTheCreateTestCaseMethodFromJSONTyped(json, false);
}

export function ResponseBodyOfTheCreateTestCaseMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseBodyOfTheCreateTestCaseMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'jsonrpc': json['jsonrpc'] == null ? undefined : json['jsonrpc'],
        'id': json['id'] == null ? undefined : json['id'],
        'error': json['error'] == null ? undefined : RpcErrorFromJSON(json['error']),
        'result': json['result'] == null ? undefined : RpcCreateTestCaseResponseFromJSON(json['result']),
    };
}

export function ResponseBodyOfTheCreateTestCaseMethodToJSON(json: any): ResponseBodyOfTheCreateTestCaseMethod {
    return ResponseBodyOfTheCreateTestCaseMethodToJSONTyped(json, false);
}

export function ResponseBodyOfTheCreateTestCaseMethodToJSONTyped(value?: ResponseBodyOfTheCreateTestCaseMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jsonrpc': value['jsonrpc'],
        'id': value['id'],
        'error': RpcErrorToJSON(value['error']),
        'result': RpcCreateTestCaseResponseToJSON(value['result']),
    };
}

