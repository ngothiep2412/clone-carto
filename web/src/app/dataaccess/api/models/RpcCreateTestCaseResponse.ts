/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcTestCaseSnippet } from './RpcTestCaseSnippet';
import {
    RpcTestCaseSnippetFromJSON,
    RpcTestCaseSnippetFromJSONTyped,
    RpcTestCaseSnippetToJSON,
    RpcTestCaseSnippetToJSONTyped,
} from './RpcTestCaseSnippet';

/**
 * 
 * @export
 * @interface RpcCreateTestCaseResponse
 */
export interface RpcCreateTestCaseResponse {
    /**
     * 
     * @type {RpcTestCaseSnippet}
     * @memberof RpcCreateTestCaseResponse
     */
    testCaseSnippet: RpcTestCaseSnippet;
}

/**
 * Check if a given object implements the RpcCreateTestCaseResponse interface.
 */
export function instanceOfRpcCreateTestCaseResponse(value: object): value is RpcCreateTestCaseResponse {
    if (!('testCaseSnippet' in value) || value['testCaseSnippet'] === undefined) return false;
    return true;
}

export function RpcCreateTestCaseResponseFromJSON(json: any): RpcCreateTestCaseResponse {
    return RpcCreateTestCaseResponseFromJSONTyped(json, false);
}

export function RpcCreateTestCaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcCreateTestCaseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'testCaseSnippet': RpcTestCaseSnippetFromJSON(json['TestCaseSnippet']),
    };
}

export function RpcCreateTestCaseResponseToJSON(json: any): RpcCreateTestCaseResponse {
    return RpcCreateTestCaseResponseToJSONTyped(json, false);
}

export function RpcCreateTestCaseResponseToJSONTyped(value?: RpcCreateTestCaseResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'TestCaseSnippet': RpcTestCaseSnippetToJSON(value['testCaseSnippet']),
    };
}

