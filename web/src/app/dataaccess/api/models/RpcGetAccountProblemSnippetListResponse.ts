/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcProblem } from './RpcProblem';
import {
    RpcProblemFromJSON,
    RpcProblemFromJSONTyped,
    RpcProblemToJSON,
    RpcProblemToJSONTyped,
} from './RpcProblem';

/**
 * 
 * @export
 * @interface RpcGetAccountProblemSnippetListResponse
 */
export interface RpcGetAccountProblemSnippetListResponse {
    /**
     * 
     * @type {number}
     * @memberof RpcGetAccountProblemSnippetListResponse
     */
    totalProblemCount: number;
    /**
     * 
     * @type {Array<RpcProblem>}
     * @memberof RpcGetAccountProblemSnippetListResponse
     */
    problemSnippetList: Array<RpcProblem>;
}

/**
 * Check if a given object implements the RpcGetAccountProblemSnippetListResponse interface.
 */
export function instanceOfRpcGetAccountProblemSnippetListResponse(value: object): value is RpcGetAccountProblemSnippetListResponse {
    if (!('totalProblemCount' in value) || value['totalProblemCount'] === undefined) return false;
    if (!('problemSnippetList' in value) || value['problemSnippetList'] === undefined) return false;
    return true;
}

export function RpcGetAccountProblemSnippetListResponseFromJSON(json: any): RpcGetAccountProblemSnippetListResponse {
    return RpcGetAccountProblemSnippetListResponseFromJSONTyped(json, false);
}

export function RpcGetAccountProblemSnippetListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcGetAccountProblemSnippetListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalProblemCount': json['TotalProblemCount'],
        'problemSnippetList': ((json['ProblemSnippetList'] as Array<any>).map(RpcProblemFromJSON)),
    };
}

export function RpcGetAccountProblemSnippetListResponseToJSON(json: any): RpcGetAccountProblemSnippetListResponse {
    return RpcGetAccountProblemSnippetListResponseToJSONTyped(json, false);
}

export function RpcGetAccountProblemSnippetListResponseToJSONTyped(value?: RpcGetAccountProblemSnippetListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'TotalProblemCount': value['totalProblemCount'],
        'ProblemSnippetList': ((value['problemSnippetList'] as Array<any>).map(RpcProblemToJSON)),
    };
}

