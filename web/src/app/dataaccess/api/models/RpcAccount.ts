/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcAccountRole } from './RpcAccountRole';
import {
    RpcAccountRoleFromJSON,
    RpcAccountRoleFromJSONTyped,
    RpcAccountRoleToJSON,
    RpcAccountRoleToJSONTyped,
} from './RpcAccountRole';

/**
 * 
 * @export
 * @interface RpcAccount
 */
export interface RpcAccount {
    /**
     * 
     * @type {number}
     * @memberof RpcAccount
     */
    iD: number;
    /**
     * 
     * @type {string}
     * @memberof RpcAccount
     */
    accountName: string;
    /**
     * 
     * @type {string}
     * @memberof RpcAccount
     */
    displayName: string;
    /**
     * 
     * @type {RpcAccountRole}
     * @memberof RpcAccount
     */
    role: RpcAccountRole;
}



/**
 * Check if a given object implements the RpcAccount interface.
 */
export function instanceOfRpcAccount(value: object): value is RpcAccount {
    if (!('iD' in value) || value['iD'] === undefined) return false;
    if (!('accountName' in value) || value['accountName'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function RpcAccountFromJSON(json: any): RpcAccount {
    return RpcAccountFromJSONTyped(json, false);
}

export function RpcAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'iD': json['ID'],
        'accountName': json['AccountName'],
        'displayName': json['DisplayName'],
        'role': RpcAccountRoleFromJSON(json['Role']),
    };
}

export function RpcAccountToJSON(json: any): RpcAccount {
    return RpcAccountToJSONTyped(json, false);
}

export function RpcAccountToJSONTyped(value?: RpcAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ID': value['iD'],
        'AccountName': value['accountName'],
        'DisplayName': value['displayName'],
        'Role': RpcAccountRoleToJSON(value['role']),
    };
}

