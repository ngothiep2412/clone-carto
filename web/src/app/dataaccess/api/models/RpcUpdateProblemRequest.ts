/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcProblemExample } from './RpcProblemExample';
import {
    RpcProblemExampleFromJSON,
    RpcProblemExampleFromJSONTyped,
    RpcProblemExampleToJSON,
    RpcProblemExampleToJSONTyped,
} from './RpcProblemExample';

/**
 * 
 * @export
 * @interface RpcUpdateProblemRequest
 */
export interface RpcUpdateProblemRequest {
    /**
     * 
     * @type {number}
     * @memberof RpcUpdateProblemRequest
     */
    iD: number;
    /**
     * 
     * @type {string}
     * @memberof RpcUpdateProblemRequest
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof RpcUpdateProblemRequest
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof RpcUpdateProblemRequest
     */
    timeLimitInMillisecond: number;
    /**
     * 
     * @type {number}
     * @memberof RpcUpdateProblemRequest
     */
    memoryLimitInByte: number;
    /**
     * 
     * @type {Array<RpcProblemExample>}
     * @memberof RpcUpdateProblemRequest
     */
    exampleList: Array<RpcProblemExample>;
}

/**
 * Check if a given object implements the RpcUpdateProblemRequest interface.
 */
export function instanceOfRpcUpdateProblemRequest(value: object): value is RpcUpdateProblemRequest {
    if (!('iD' in value) || value['iD'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('timeLimitInMillisecond' in value) || value['timeLimitInMillisecond'] === undefined) return false;
    if (!('memoryLimitInByte' in value) || value['memoryLimitInByte'] === undefined) return false;
    if (!('exampleList' in value) || value['exampleList'] === undefined) return false;
    return true;
}

export function RpcUpdateProblemRequestFromJSON(json: any): RpcUpdateProblemRequest {
    return RpcUpdateProblemRequestFromJSONTyped(json, false);
}

export function RpcUpdateProblemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcUpdateProblemRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'iD': json['ID'],
        'displayName': json['DisplayName'],
        'description': json['Description'],
        'timeLimitInMillisecond': json['TimeLimitInMillisecond'],
        'memoryLimitInByte': json['MemoryLimitInByte'],
        'exampleList': ((json['ExampleList'] as Array<any>).map(RpcProblemExampleFromJSON)),
    };
}

export function RpcUpdateProblemRequestToJSON(json: any): RpcUpdateProblemRequest {
    return RpcUpdateProblemRequestToJSONTyped(json, false);
}

export function RpcUpdateProblemRequestToJSONTyped(value?: RpcUpdateProblemRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ID': value['iD'],
        'DisplayName': value['displayName'],
        'Description': value['description'],
        'TimeLimitInMillisecond': value['timeLimitInMillisecond'],
        'MemoryLimitInByte': value['memoryLimitInByte'],
        'ExampleList': ((value['exampleList'] as Array<any>).map(RpcProblemExampleToJSON)),
    };
}

