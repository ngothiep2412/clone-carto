/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcUpdateTestCaseRequest } from './RpcUpdateTestCaseRequest';
import {
    RpcUpdateTestCaseRequestFromJSON,
    RpcUpdateTestCaseRequestFromJSONTyped,
    RpcUpdateTestCaseRequestToJSON,
    RpcUpdateTestCaseRequestToJSONTyped,
} from './RpcUpdateTestCaseRequest';

/**
 * 
 * @export
 * @interface RequestBodyOfTheUpdateTestCaseMethod
 */
export interface RequestBodyOfTheUpdateTestCaseMethod {
    /**
     * A String specifying the version of the JSON-RPC protocol. MUST be exactly "2.0".
     * @type {string}
     * @memberof RequestBodyOfTheUpdateTestCaseMethod
     */
    jsonrpc?: RequestBodyOfTheUpdateTestCaseMethodJsonrpcEnum;
    /**
     * An identifier established by the Client.
     * @type {string}
     * @memberof RequestBodyOfTheUpdateTestCaseMethod
     */
    id?: string;
    /**
     * A String containing the name of the method to be invoked.
     * @type {string}
     * @memberof RequestBodyOfTheUpdateTestCaseMethod
     */
    method?: RequestBodyOfTheUpdateTestCaseMethodMethodEnum;
    /**
     * 
     * @type {RpcUpdateTestCaseRequest}
     * @memberof RequestBodyOfTheUpdateTestCaseMethod
     */
    params?: RpcUpdateTestCaseRequest;
}


/**
 * @export
 */
export const RequestBodyOfTheUpdateTestCaseMethodJsonrpcEnum = {
    _20: '2.0'
} as const;
export type RequestBodyOfTheUpdateTestCaseMethodJsonrpcEnum = typeof RequestBodyOfTheUpdateTestCaseMethodJsonrpcEnum[keyof typeof RequestBodyOfTheUpdateTestCaseMethodJsonrpcEnum];

/**
 * @export
 */
export const RequestBodyOfTheUpdateTestCaseMethodMethodEnum = {
    UpdateTestCase: 'update_test_case'
} as const;
export type RequestBodyOfTheUpdateTestCaseMethodMethodEnum = typeof RequestBodyOfTheUpdateTestCaseMethodMethodEnum[keyof typeof RequestBodyOfTheUpdateTestCaseMethodMethodEnum];


/**
 * Check if a given object implements the RequestBodyOfTheUpdateTestCaseMethod interface.
 */
export function instanceOfRequestBodyOfTheUpdateTestCaseMethod(value: object): value is RequestBodyOfTheUpdateTestCaseMethod {
    return true;
}

export function RequestBodyOfTheUpdateTestCaseMethodFromJSON(json: any): RequestBodyOfTheUpdateTestCaseMethod {
    return RequestBodyOfTheUpdateTestCaseMethodFromJSONTyped(json, false);
}

export function RequestBodyOfTheUpdateTestCaseMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestBodyOfTheUpdateTestCaseMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'jsonrpc': json['jsonrpc'] == null ? undefined : json['jsonrpc'],
        'id': json['id'] == null ? undefined : json['id'],
        'method': json['method'] == null ? undefined : json['method'],
        'params': json['params'] == null ? undefined : RpcUpdateTestCaseRequestFromJSON(json['params']),
    };
}

export function RequestBodyOfTheUpdateTestCaseMethodToJSON(json: any): RequestBodyOfTheUpdateTestCaseMethod {
    return RequestBodyOfTheUpdateTestCaseMethodToJSONTyped(json, false);
}

export function RequestBodyOfTheUpdateTestCaseMethodToJSONTyped(value?: RequestBodyOfTheUpdateTestCaseMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jsonrpc': value['jsonrpc'],
        'id': value['id'],
        'method': value['method'],
        'params': RpcUpdateTestCaseRequestToJSON(value['params']),
    };
}

