/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcUserRole } from './RpcUserRole';
import {
    RpcUserRoleFromJSON,
    RpcUserRoleFromJSONTyped,
    RpcUserRoleToJSON,
    RpcUserRoleToJSONTyped,
} from './RpcUserRole';

/**
 * 
 * @export
 * @interface RpcCreateUserRequest
 */
export interface RpcCreateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    displayName: string;
    /**
     * 
     * @type {RpcUserRole}
     * @memberof RpcCreateUserRequest
     */
    role: RpcUserRole;
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    password: string;
}



/**
 * Check if a given object implements the RpcCreateUserRequest interface.
 */
export function instanceOfRpcCreateUserRequest(value: object): value is RpcCreateUserRequest {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function RpcCreateUserRequestFromJSON(json: any): RpcCreateUserRequest {
    return RpcCreateUserRequestFromJSONTyped(json, false);
}

export function RpcCreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcCreateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['Username'],
        'displayName': json['DisplayName'],
        'role': RpcUserRoleFromJSON(json['Role']),
        'password': json['Password'],
    };
}

export function RpcCreateUserRequestToJSON(json: any): RpcCreateUserRequest {
    return RpcCreateUserRequestToJSONTyped(json, false);
}

export function RpcCreateUserRequestToJSONTyped(value?: RpcCreateUserRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Username': value['username'],
        'DisplayName': value['displayName'],
        'Role': RpcUserRoleToJSON(value['role']),
        'Password': value['password'],
    };
}

