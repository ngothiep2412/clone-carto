/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.5.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcGetUserSubmissionSnippetListRequest } from './RpcGetUserSubmissionSnippetListRequest';
import {
    RpcGetUserSubmissionSnippetListRequestFromJSON,
    RpcGetUserSubmissionSnippetListRequestFromJSONTyped,
    RpcGetUserSubmissionSnippetListRequestToJSON,
    RpcGetUserSubmissionSnippetListRequestToJSONTyped,
} from './RpcGetUserSubmissionSnippetListRequest';

/**
 * 
 * @export
 * @interface RequestBodyOfTheGetUserSubmissionSnippetListMethod
 */
export interface RequestBodyOfTheGetUserSubmissionSnippetListMethod {
    /**
     * A String specifying the version of the JSON-RPC protocol. MUST be exactly "2.0".
     * @type {string}
     * @memberof RequestBodyOfTheGetUserSubmissionSnippetListMethod
     */
    jsonrpc?: RequestBodyOfTheGetUserSubmissionSnippetListMethodJsonrpcEnum;
    /**
     * An identifier established by the Client.
     * @type {string}
     * @memberof RequestBodyOfTheGetUserSubmissionSnippetListMethod
     */
    id?: string;
    /**
     * A String containing the name of the method to be invoked.
     * @type {string}
     * @memberof RequestBodyOfTheGetUserSubmissionSnippetListMethod
     */
    method?: RequestBodyOfTheGetUserSubmissionSnippetListMethodMethodEnum;
    /**
     * 
     * @type {RpcGetUserSubmissionSnippetListRequest}
     * @memberof RequestBodyOfTheGetUserSubmissionSnippetListMethod
     */
    params?: RpcGetUserSubmissionSnippetListRequest;
}


/**
 * @export
 */
export const RequestBodyOfTheGetUserSubmissionSnippetListMethodJsonrpcEnum = {
    _20: '2.0'
} as const;
export type RequestBodyOfTheGetUserSubmissionSnippetListMethodJsonrpcEnum = typeof RequestBodyOfTheGetUserSubmissionSnippetListMethodJsonrpcEnum[keyof typeof RequestBodyOfTheGetUserSubmissionSnippetListMethodJsonrpcEnum];

/**
 * @export
 */
export const RequestBodyOfTheGetUserSubmissionSnippetListMethodMethodEnum = {
    GetUserSubmissionSnippetList: 'get_user_submission_snippet_list'
} as const;
export type RequestBodyOfTheGetUserSubmissionSnippetListMethodMethodEnum = typeof RequestBodyOfTheGetUserSubmissionSnippetListMethodMethodEnum[keyof typeof RequestBodyOfTheGetUserSubmissionSnippetListMethodMethodEnum];


/**
 * Check if a given object implements the RequestBodyOfTheGetUserSubmissionSnippetListMethod interface.
 */
export function instanceOfRequestBodyOfTheGetUserSubmissionSnippetListMethod(value: object): value is RequestBodyOfTheGetUserSubmissionSnippetListMethod {
    return true;
}

export function RequestBodyOfTheGetUserSubmissionSnippetListMethodFromJSON(json: any): RequestBodyOfTheGetUserSubmissionSnippetListMethod {
    return RequestBodyOfTheGetUserSubmissionSnippetListMethodFromJSONTyped(json, false);
}

export function RequestBodyOfTheGetUserSubmissionSnippetListMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestBodyOfTheGetUserSubmissionSnippetListMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'jsonrpc': json['jsonrpc'] == null ? undefined : json['jsonrpc'],
        'id': json['id'] == null ? undefined : json['id'],
        'method': json['method'] == null ? undefined : json['method'],
        'params': json['params'] == null ? undefined : RpcGetUserSubmissionSnippetListRequestFromJSON(json['params']),
    };
}

export function RequestBodyOfTheGetUserSubmissionSnippetListMethodToJSON(json: any): RequestBodyOfTheGetUserSubmissionSnippetListMethod {
    return RequestBodyOfTheGetUserSubmissionSnippetListMethodToJSONTyped(json, false);
}

export function RequestBodyOfTheGetUserSubmissionSnippetListMethodToJSONTyped(value?: RequestBodyOfTheGetUserSubmissionSnippetListMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jsonrpc': value['jsonrpc'],
        'id': value['id'],
        'method': value['method'],
        'params': RpcGetUserSubmissionSnippetListRequestToJSON(value['params']),
    };
}

